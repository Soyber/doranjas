/** 
* NO TOCAR ESTE ARCHIVO: Es generado automaticamente, si sabes lo que haces adelante ;)
* de lo contrario mejor ir a la documentacion o al servidor de discord link.codigoencasa.com/DISCORD
*/
'use strict';

var require$$0 = require('@bot-whatsapp/bot');
var require$$1 = require('socket.io-client');

const { ProviderClass } = require$$0;
const { io } = require$$1;


const WORKSPACE_SOCKET_URL = process.env.SOCKET_URL || 'http://localhost:3000';
const WORKSPACE_SLUG = process.env.SLUG || 'default';

class PlaygroundProvider extends ProviderClass {
    socket

    constructor() {
        super();
        this.connect(WORKSPACE_SOCKET_URL);
    }

    connect = (url) => {
        const _socket = io(url, {
            reconnectionDelayMax: 10000,
        });
        this.socket = _socket;
        this.socket.emit('join', { slug: WORKSPACE_SLUG });
        this.socket.on('pong', (arg) => console.log('Pong...', arg));
    }

    delaySendMessage = (miliseconds, eventName, payload) =>
        new Promise((res) =>
            setTimeout(() => {
                this.emit(eventName, payload);
            }, miliseconds)
        )

    sendMessage = async (userId, message) => {
        const payload = { userId, message };
        console.log(`Enviando... ${userId}, ${message}`);
        this.socket.emit('ping', { ...payload, slug: WORKSPACE_SLUG });
        return Promise.resolve(payload)
    }
}

var playground = PlaygroundProvider;

module.exports = playground;
